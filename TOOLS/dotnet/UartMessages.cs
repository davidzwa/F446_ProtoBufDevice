// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: uart_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from uart_messages.proto</summary>
public static partial class UartMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for uart_messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static UartMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChN1YXJ0X21lc3NhZ2VzLnByb3RvIqYCCg1SYWRpb1J4Q29uZmlnEhsKBU1v",
          "ZGVtGAEgASgOMgwuUmFkaW9Nb2RlbXMSEQoJQmFuZHdpZHRoGAIgASgNEhAK",
          "CERhdGFSYXRlGAMgASgNEhAKCENvZGVSYXRlGAQgASgNEhQKDEJhbmR3aWR0",
          "aEFmYxgFIAEoDRITCgtQcmVhbWJsZUxlbhgGIAEoDRITCgtTeW1iVGltZW91",
          "dBgHIAEoDRIOCgZGaXhMZW4YCCABKAgSEgoKUGF5bG9hZExlbhgJIAEoDRIN",
          "CgVDcmNPbhgKIAEoCBIRCglGcmVxSG9wT24YCyABKAgSEQoJSG9wUGVyaW9k",
          "GAwgASgNEhIKCklxSW52ZXJ0ZWQYDSABKAgSFAoMUnhDb250aW51b3VzGA4g",
          "ASgIIv8BCg1SYWRpb1R4Q29uZmlnEhsKBU1vZGVtGAEgASgOMgwuUmFkaW9N",
          "b2RlbXMSDQoFUG93ZXIYAiABKA0SDAoERmRldhgDIAEoDRIRCglCYW5kd2lk",
          "dGgYBCABKA0SEAoIRGF0YVJhdGUYBSABKA0SEAoIQ29kZVJhdGUYBiABKA0S",
          "EwoLUHJlYW1ibGVMZW4YByABKA0SDgoGRml4TGVuGAggASgIEg0KBUNyY09u",
          "GAkgASgIEhEKCUZyZXFIb3BPbhgKIAEoCBIRCglIb3BQZXJpb2QYCyABKA0S",
          "EgoKSXFJbnZlcnRlZBgMIAEoCBIPCgdUaW1lb3V0GA0gASgNIkkKD1RyYW5z",
          "bWl0Q29tbWFuZBITCgtJc011bHRpY2FzdBgBIAEoCBIQCghEZXZpY2VJZBgC",
          "IAEoDRIPCgdQYXlsb2FkGAMgASgMIiIKD1JlcXVlc3RCb290SW5mbxIPCgdS",
          "ZXF1ZXN0GAEgASgIIrcBCgtVYXJ0Q29tbWFuZBIiCghyeENvbmZpZxgBIAEo",
          "CzIOLlJhZGlvUnhDb25maWdIABIiCgh0eENvbmZpZxgCIAEoCzIOLlJhZGlv",
          "VHhDb25maWdIABIrCg90cmFuc21pdENvbW1hbmQYAyABKAsyEC5UcmFuc21p",
          "dENvbW1hbmRIABIrCg9yZXF1ZXN0Qm9vdEluZm8YBCABKAsyEC5SZXF1ZXN0",
          "Qm9vdEluZm9IAEIGCgRCb2R5KiwKC1JhZGlvTW9kZW1zEg0KCU1PREVNX0ZT",
          "SxAAEg4KCk1PREVNX0xPUkEQAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RadioModems), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RadioRxConfig), global::RadioRxConfig.Parser, new[]{ "Modem", "Bandwidth", "DataRate", "CodeRate", "BandwidthAfc", "PreambleLen", "SymbTimeout", "FixLen", "PayloadLen", "CrcOn", "FreqHopOn", "HopPeriod", "IqInverted", "RxContinuous" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RadioTxConfig), global::RadioTxConfig.Parser, new[]{ "Modem", "Power", "Fdev", "Bandwidth", "DataRate", "CodeRate", "PreambleLen", "FixLen", "CrcOn", "FreqHopOn", "HopPeriod", "IqInverted", "Timeout" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TransmitCommand), global::TransmitCommand.Parser, new[]{ "IsMulticast", "DeviceId", "Payload" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestBootInfo), global::RequestBootInfo.Parser, new[]{ "Request" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UartCommand), global::UartCommand.Parser, new[]{ "RxConfig", "TxConfig", "TransmitCommand", "RequestBootInfo" }, new[]{ "Body" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum RadioModems {
  [pbr::OriginalName("MODEM_FSK")] ModemFsk = 0,
  [pbr::OriginalName("MODEM_LORA")] ModemLora = 1,
}

#endregion

#region Messages
public sealed partial class RadioRxConfig : pb::IMessage<RadioRxConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RadioRxConfig> _parser = new pb::MessageParser<RadioRxConfig>(() => new RadioRxConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RadioRxConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UartMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioRxConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioRxConfig(RadioRxConfig other) : this() {
    modem_ = other.modem_;
    bandwidth_ = other.bandwidth_;
    dataRate_ = other.dataRate_;
    codeRate_ = other.codeRate_;
    bandwidthAfc_ = other.bandwidthAfc_;
    preambleLen_ = other.preambleLen_;
    symbTimeout_ = other.symbTimeout_;
    fixLen_ = other.fixLen_;
    payloadLen_ = other.payloadLen_;
    crcOn_ = other.crcOn_;
    freqHopOn_ = other.freqHopOn_;
    hopPeriod_ = other.hopPeriod_;
    iqInverted_ = other.iqInverted_;
    rxContinuous_ = other.rxContinuous_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioRxConfig Clone() {
    return new RadioRxConfig(this);
  }

  /// <summary>Field number for the "Modem" field.</summary>
  public const int ModemFieldNumber = 1;
  private global::RadioModems modem_ = global::RadioModems.ModemFsk;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RadioModems Modem {
    get { return modem_; }
    set {
      modem_ = value;
    }
  }

  /// <summary>Field number for the "Bandwidth" field.</summary>
  public const int BandwidthFieldNumber = 2;
  private uint bandwidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Bandwidth {
    get { return bandwidth_; }
    set {
      bandwidth_ = value;
    }
  }

  /// <summary>Field number for the "DataRate" field.</summary>
  public const int DataRateFieldNumber = 3;
  private uint dataRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DataRate {
    get { return dataRate_; }
    set {
      dataRate_ = value;
    }
  }

  /// <summary>Field number for the "CodeRate" field.</summary>
  public const int CodeRateFieldNumber = 4;
  private uint codeRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CodeRate {
    get { return codeRate_; }
    set {
      codeRate_ = value;
    }
  }

  /// <summary>Field number for the "BandwidthAfc" field.</summary>
  public const int BandwidthAfcFieldNumber = 5;
  private uint bandwidthAfc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BandwidthAfc {
    get { return bandwidthAfc_; }
    set {
      bandwidthAfc_ = value;
    }
  }

  /// <summary>Field number for the "PreambleLen" field.</summary>
  public const int PreambleLenFieldNumber = 6;
  private uint preambleLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PreambleLen {
    get { return preambleLen_; }
    set {
      preambleLen_ = value;
    }
  }

  /// <summary>Field number for the "SymbTimeout" field.</summary>
  public const int SymbTimeoutFieldNumber = 7;
  private uint symbTimeout_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SymbTimeout {
    get { return symbTimeout_; }
    set {
      symbTimeout_ = value;
    }
  }

  /// <summary>Field number for the "FixLen" field.</summary>
  public const int FixLenFieldNumber = 8;
  private bool fixLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FixLen {
    get { return fixLen_; }
    set {
      fixLen_ = value;
    }
  }

  /// <summary>Field number for the "PayloadLen" field.</summary>
  public const int PayloadLenFieldNumber = 9;
  private uint payloadLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PayloadLen {
    get { return payloadLen_; }
    set {
      payloadLen_ = value;
    }
  }

  /// <summary>Field number for the "CrcOn" field.</summary>
  public const int CrcOnFieldNumber = 10;
  private bool crcOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CrcOn {
    get { return crcOn_; }
    set {
      crcOn_ = value;
    }
  }

  /// <summary>Field number for the "FreqHopOn" field.</summary>
  public const int FreqHopOnFieldNumber = 11;
  private bool freqHopOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FreqHopOn {
    get { return freqHopOn_; }
    set {
      freqHopOn_ = value;
    }
  }

  /// <summary>Field number for the "HopPeriod" field.</summary>
  public const int HopPeriodFieldNumber = 12;
  private uint hopPeriod_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HopPeriod {
    get { return hopPeriod_; }
    set {
      hopPeriod_ = value;
    }
  }

  /// <summary>Field number for the "IqInverted" field.</summary>
  public const int IqInvertedFieldNumber = 13;
  private bool iqInverted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IqInverted {
    get { return iqInverted_; }
    set {
      iqInverted_ = value;
    }
  }

  /// <summary>Field number for the "RxContinuous" field.</summary>
  public const int RxContinuousFieldNumber = 14;
  private bool rxContinuous_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool RxContinuous {
    get { return rxContinuous_; }
    set {
      rxContinuous_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RadioRxConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RadioRxConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Modem != other.Modem) return false;
    if (Bandwidth != other.Bandwidth) return false;
    if (DataRate != other.DataRate) return false;
    if (CodeRate != other.CodeRate) return false;
    if (BandwidthAfc != other.BandwidthAfc) return false;
    if (PreambleLen != other.PreambleLen) return false;
    if (SymbTimeout != other.SymbTimeout) return false;
    if (FixLen != other.FixLen) return false;
    if (PayloadLen != other.PayloadLen) return false;
    if (CrcOn != other.CrcOn) return false;
    if (FreqHopOn != other.FreqHopOn) return false;
    if (HopPeriod != other.HopPeriod) return false;
    if (IqInverted != other.IqInverted) return false;
    if (RxContinuous != other.RxContinuous) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Modem != global::RadioModems.ModemFsk) hash ^= Modem.GetHashCode();
    if (Bandwidth != 0) hash ^= Bandwidth.GetHashCode();
    if (DataRate != 0) hash ^= DataRate.GetHashCode();
    if (CodeRate != 0) hash ^= CodeRate.GetHashCode();
    if (BandwidthAfc != 0) hash ^= BandwidthAfc.GetHashCode();
    if (PreambleLen != 0) hash ^= PreambleLen.GetHashCode();
    if (SymbTimeout != 0) hash ^= SymbTimeout.GetHashCode();
    if (FixLen != false) hash ^= FixLen.GetHashCode();
    if (PayloadLen != 0) hash ^= PayloadLen.GetHashCode();
    if (CrcOn != false) hash ^= CrcOn.GetHashCode();
    if (FreqHopOn != false) hash ^= FreqHopOn.GetHashCode();
    if (HopPeriod != 0) hash ^= HopPeriod.GetHashCode();
    if (IqInverted != false) hash ^= IqInverted.GetHashCode();
    if (RxContinuous != false) hash ^= RxContinuous.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Modem != global::RadioModems.ModemFsk) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Modem);
    }
    if (Bandwidth != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Bandwidth);
    }
    if (DataRate != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(DataRate);
    }
    if (CodeRate != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CodeRate);
    }
    if (BandwidthAfc != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(BandwidthAfc);
    }
    if (PreambleLen != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(PreambleLen);
    }
    if (SymbTimeout != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(SymbTimeout);
    }
    if (FixLen != false) {
      output.WriteRawTag(64);
      output.WriteBool(FixLen);
    }
    if (PayloadLen != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(PayloadLen);
    }
    if (CrcOn != false) {
      output.WriteRawTag(80);
      output.WriteBool(CrcOn);
    }
    if (FreqHopOn != false) {
      output.WriteRawTag(88);
      output.WriteBool(FreqHopOn);
    }
    if (HopPeriod != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(HopPeriod);
    }
    if (IqInverted != false) {
      output.WriteRawTag(104);
      output.WriteBool(IqInverted);
    }
    if (RxContinuous != false) {
      output.WriteRawTag(112);
      output.WriteBool(RxContinuous);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Modem != global::RadioModems.ModemFsk) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Modem);
    }
    if (Bandwidth != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Bandwidth);
    }
    if (DataRate != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(DataRate);
    }
    if (CodeRate != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CodeRate);
    }
    if (BandwidthAfc != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(BandwidthAfc);
    }
    if (PreambleLen != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(PreambleLen);
    }
    if (SymbTimeout != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(SymbTimeout);
    }
    if (FixLen != false) {
      output.WriteRawTag(64);
      output.WriteBool(FixLen);
    }
    if (PayloadLen != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(PayloadLen);
    }
    if (CrcOn != false) {
      output.WriteRawTag(80);
      output.WriteBool(CrcOn);
    }
    if (FreqHopOn != false) {
      output.WriteRawTag(88);
      output.WriteBool(FreqHopOn);
    }
    if (HopPeriod != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(HopPeriod);
    }
    if (IqInverted != false) {
      output.WriteRawTag(104);
      output.WriteBool(IqInverted);
    }
    if (RxContinuous != false) {
      output.WriteRawTag(112);
      output.WriteBool(RxContinuous);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Modem != global::RadioModems.ModemFsk) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modem);
    }
    if (Bandwidth != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bandwidth);
    }
    if (DataRate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataRate);
    }
    if (CodeRate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CodeRate);
    }
    if (BandwidthAfc != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BandwidthAfc);
    }
    if (PreambleLen != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PreambleLen);
    }
    if (SymbTimeout != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SymbTimeout);
    }
    if (FixLen != false) {
      size += 1 + 1;
    }
    if (PayloadLen != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PayloadLen);
    }
    if (CrcOn != false) {
      size += 1 + 1;
    }
    if (FreqHopOn != false) {
      size += 1 + 1;
    }
    if (HopPeriod != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HopPeriod);
    }
    if (IqInverted != false) {
      size += 1 + 1;
    }
    if (RxContinuous != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RadioRxConfig other) {
    if (other == null) {
      return;
    }
    if (other.Modem != global::RadioModems.ModemFsk) {
      Modem = other.Modem;
    }
    if (other.Bandwidth != 0) {
      Bandwidth = other.Bandwidth;
    }
    if (other.DataRate != 0) {
      DataRate = other.DataRate;
    }
    if (other.CodeRate != 0) {
      CodeRate = other.CodeRate;
    }
    if (other.BandwidthAfc != 0) {
      BandwidthAfc = other.BandwidthAfc;
    }
    if (other.PreambleLen != 0) {
      PreambleLen = other.PreambleLen;
    }
    if (other.SymbTimeout != 0) {
      SymbTimeout = other.SymbTimeout;
    }
    if (other.FixLen != false) {
      FixLen = other.FixLen;
    }
    if (other.PayloadLen != 0) {
      PayloadLen = other.PayloadLen;
    }
    if (other.CrcOn != false) {
      CrcOn = other.CrcOn;
    }
    if (other.FreqHopOn != false) {
      FreqHopOn = other.FreqHopOn;
    }
    if (other.HopPeriod != 0) {
      HopPeriod = other.HopPeriod;
    }
    if (other.IqInverted != false) {
      IqInverted = other.IqInverted;
    }
    if (other.RxContinuous != false) {
      RxContinuous = other.RxContinuous;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Modem = (global::RadioModems) input.ReadEnum();
          break;
        }
        case 16: {
          Bandwidth = input.ReadUInt32();
          break;
        }
        case 24: {
          DataRate = input.ReadUInt32();
          break;
        }
        case 32: {
          CodeRate = input.ReadUInt32();
          break;
        }
        case 40: {
          BandwidthAfc = input.ReadUInt32();
          break;
        }
        case 48: {
          PreambleLen = input.ReadUInt32();
          break;
        }
        case 56: {
          SymbTimeout = input.ReadUInt32();
          break;
        }
        case 64: {
          FixLen = input.ReadBool();
          break;
        }
        case 72: {
          PayloadLen = input.ReadUInt32();
          break;
        }
        case 80: {
          CrcOn = input.ReadBool();
          break;
        }
        case 88: {
          FreqHopOn = input.ReadBool();
          break;
        }
        case 96: {
          HopPeriod = input.ReadUInt32();
          break;
        }
        case 104: {
          IqInverted = input.ReadBool();
          break;
        }
        case 112: {
          RxContinuous = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Modem = (global::RadioModems) input.ReadEnum();
          break;
        }
        case 16: {
          Bandwidth = input.ReadUInt32();
          break;
        }
        case 24: {
          DataRate = input.ReadUInt32();
          break;
        }
        case 32: {
          CodeRate = input.ReadUInt32();
          break;
        }
        case 40: {
          BandwidthAfc = input.ReadUInt32();
          break;
        }
        case 48: {
          PreambleLen = input.ReadUInt32();
          break;
        }
        case 56: {
          SymbTimeout = input.ReadUInt32();
          break;
        }
        case 64: {
          FixLen = input.ReadBool();
          break;
        }
        case 72: {
          PayloadLen = input.ReadUInt32();
          break;
        }
        case 80: {
          CrcOn = input.ReadBool();
          break;
        }
        case 88: {
          FreqHopOn = input.ReadBool();
          break;
        }
        case 96: {
          HopPeriod = input.ReadUInt32();
          break;
        }
        case 104: {
          IqInverted = input.ReadBool();
          break;
        }
        case 112: {
          RxContinuous = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RadioTxConfig : pb::IMessage<RadioTxConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RadioTxConfig> _parser = new pb::MessageParser<RadioTxConfig>(() => new RadioTxConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RadioTxConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UartMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioTxConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioTxConfig(RadioTxConfig other) : this() {
    modem_ = other.modem_;
    power_ = other.power_;
    fdev_ = other.fdev_;
    bandwidth_ = other.bandwidth_;
    dataRate_ = other.dataRate_;
    codeRate_ = other.codeRate_;
    preambleLen_ = other.preambleLen_;
    fixLen_ = other.fixLen_;
    crcOn_ = other.crcOn_;
    freqHopOn_ = other.freqHopOn_;
    hopPeriod_ = other.hopPeriod_;
    iqInverted_ = other.iqInverted_;
    timeout_ = other.timeout_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RadioTxConfig Clone() {
    return new RadioTxConfig(this);
  }

  /// <summary>Field number for the "Modem" field.</summary>
  public const int ModemFieldNumber = 1;
  private global::RadioModems modem_ = global::RadioModems.ModemFsk;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RadioModems Modem {
    get { return modem_; }
    set {
      modem_ = value;
    }
  }

  /// <summary>Field number for the "Power" field.</summary>
  public const int PowerFieldNumber = 2;
  private uint power_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Power {
    get { return power_; }
    set {
      power_ = value;
    }
  }

  /// <summary>Field number for the "Fdev" field.</summary>
  public const int FdevFieldNumber = 3;
  private uint fdev_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Fdev {
    get { return fdev_; }
    set {
      fdev_ = value;
    }
  }

  /// <summary>Field number for the "Bandwidth" field.</summary>
  public const int BandwidthFieldNumber = 4;
  private uint bandwidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Bandwidth {
    get { return bandwidth_; }
    set {
      bandwidth_ = value;
    }
  }

  /// <summary>Field number for the "DataRate" field.</summary>
  public const int DataRateFieldNumber = 5;
  private uint dataRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DataRate {
    get { return dataRate_; }
    set {
      dataRate_ = value;
    }
  }

  /// <summary>Field number for the "CodeRate" field.</summary>
  public const int CodeRateFieldNumber = 6;
  private uint codeRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CodeRate {
    get { return codeRate_; }
    set {
      codeRate_ = value;
    }
  }

  /// <summary>Field number for the "PreambleLen" field.</summary>
  public const int PreambleLenFieldNumber = 7;
  private uint preambleLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PreambleLen {
    get { return preambleLen_; }
    set {
      preambleLen_ = value;
    }
  }

  /// <summary>Field number for the "FixLen" field.</summary>
  public const int FixLenFieldNumber = 8;
  private bool fixLen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FixLen {
    get { return fixLen_; }
    set {
      fixLen_ = value;
    }
  }

  /// <summary>Field number for the "CrcOn" field.</summary>
  public const int CrcOnFieldNumber = 9;
  private bool crcOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CrcOn {
    get { return crcOn_; }
    set {
      crcOn_ = value;
    }
  }

  /// <summary>Field number for the "FreqHopOn" field.</summary>
  public const int FreqHopOnFieldNumber = 10;
  private bool freqHopOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FreqHopOn {
    get { return freqHopOn_; }
    set {
      freqHopOn_ = value;
    }
  }

  /// <summary>Field number for the "HopPeriod" field.</summary>
  public const int HopPeriodFieldNumber = 11;
  private uint hopPeriod_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HopPeriod {
    get { return hopPeriod_; }
    set {
      hopPeriod_ = value;
    }
  }

  /// <summary>Field number for the "IqInverted" field.</summary>
  public const int IqInvertedFieldNumber = 12;
  private bool iqInverted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IqInverted {
    get { return iqInverted_; }
    set {
      iqInverted_ = value;
    }
  }

  /// <summary>Field number for the "Timeout" field.</summary>
  public const int TimeoutFieldNumber = 13;
  private uint timeout_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Timeout {
    get { return timeout_; }
    set {
      timeout_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RadioTxConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RadioTxConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Modem != other.Modem) return false;
    if (Power != other.Power) return false;
    if (Fdev != other.Fdev) return false;
    if (Bandwidth != other.Bandwidth) return false;
    if (DataRate != other.DataRate) return false;
    if (CodeRate != other.CodeRate) return false;
    if (PreambleLen != other.PreambleLen) return false;
    if (FixLen != other.FixLen) return false;
    if (CrcOn != other.CrcOn) return false;
    if (FreqHopOn != other.FreqHopOn) return false;
    if (HopPeriod != other.HopPeriod) return false;
    if (IqInverted != other.IqInverted) return false;
    if (Timeout != other.Timeout) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Modem != global::RadioModems.ModemFsk) hash ^= Modem.GetHashCode();
    if (Power != 0) hash ^= Power.GetHashCode();
    if (Fdev != 0) hash ^= Fdev.GetHashCode();
    if (Bandwidth != 0) hash ^= Bandwidth.GetHashCode();
    if (DataRate != 0) hash ^= DataRate.GetHashCode();
    if (CodeRate != 0) hash ^= CodeRate.GetHashCode();
    if (PreambleLen != 0) hash ^= PreambleLen.GetHashCode();
    if (FixLen != false) hash ^= FixLen.GetHashCode();
    if (CrcOn != false) hash ^= CrcOn.GetHashCode();
    if (FreqHopOn != false) hash ^= FreqHopOn.GetHashCode();
    if (HopPeriod != 0) hash ^= HopPeriod.GetHashCode();
    if (IqInverted != false) hash ^= IqInverted.GetHashCode();
    if (Timeout != 0) hash ^= Timeout.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Modem != global::RadioModems.ModemFsk) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Modem);
    }
    if (Power != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Power);
    }
    if (Fdev != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Fdev);
    }
    if (Bandwidth != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Bandwidth);
    }
    if (DataRate != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(DataRate);
    }
    if (CodeRate != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(CodeRate);
    }
    if (PreambleLen != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PreambleLen);
    }
    if (FixLen != false) {
      output.WriteRawTag(64);
      output.WriteBool(FixLen);
    }
    if (CrcOn != false) {
      output.WriteRawTag(72);
      output.WriteBool(CrcOn);
    }
    if (FreqHopOn != false) {
      output.WriteRawTag(80);
      output.WriteBool(FreqHopOn);
    }
    if (HopPeriod != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(HopPeriod);
    }
    if (IqInverted != false) {
      output.WriteRawTag(96);
      output.WriteBool(IqInverted);
    }
    if (Timeout != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(Timeout);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Modem != global::RadioModems.ModemFsk) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Modem);
    }
    if (Power != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Power);
    }
    if (Fdev != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Fdev);
    }
    if (Bandwidth != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Bandwidth);
    }
    if (DataRate != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(DataRate);
    }
    if (CodeRate != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(CodeRate);
    }
    if (PreambleLen != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PreambleLen);
    }
    if (FixLen != false) {
      output.WriteRawTag(64);
      output.WriteBool(FixLen);
    }
    if (CrcOn != false) {
      output.WriteRawTag(72);
      output.WriteBool(CrcOn);
    }
    if (FreqHopOn != false) {
      output.WriteRawTag(80);
      output.WriteBool(FreqHopOn);
    }
    if (HopPeriod != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(HopPeriod);
    }
    if (IqInverted != false) {
      output.WriteRawTag(96);
      output.WriteBool(IqInverted);
    }
    if (Timeout != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(Timeout);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Modem != global::RadioModems.ModemFsk) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Modem);
    }
    if (Power != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Power);
    }
    if (Fdev != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fdev);
    }
    if (Bandwidth != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bandwidth);
    }
    if (DataRate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataRate);
    }
    if (CodeRate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CodeRate);
    }
    if (PreambleLen != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PreambleLen);
    }
    if (FixLen != false) {
      size += 1 + 1;
    }
    if (CrcOn != false) {
      size += 1 + 1;
    }
    if (FreqHopOn != false) {
      size += 1 + 1;
    }
    if (HopPeriod != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HopPeriod);
    }
    if (IqInverted != false) {
      size += 1 + 1;
    }
    if (Timeout != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timeout);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RadioTxConfig other) {
    if (other == null) {
      return;
    }
    if (other.Modem != global::RadioModems.ModemFsk) {
      Modem = other.Modem;
    }
    if (other.Power != 0) {
      Power = other.Power;
    }
    if (other.Fdev != 0) {
      Fdev = other.Fdev;
    }
    if (other.Bandwidth != 0) {
      Bandwidth = other.Bandwidth;
    }
    if (other.DataRate != 0) {
      DataRate = other.DataRate;
    }
    if (other.CodeRate != 0) {
      CodeRate = other.CodeRate;
    }
    if (other.PreambleLen != 0) {
      PreambleLen = other.PreambleLen;
    }
    if (other.FixLen != false) {
      FixLen = other.FixLen;
    }
    if (other.CrcOn != false) {
      CrcOn = other.CrcOn;
    }
    if (other.FreqHopOn != false) {
      FreqHopOn = other.FreqHopOn;
    }
    if (other.HopPeriod != 0) {
      HopPeriod = other.HopPeriod;
    }
    if (other.IqInverted != false) {
      IqInverted = other.IqInverted;
    }
    if (other.Timeout != 0) {
      Timeout = other.Timeout;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Modem = (global::RadioModems) input.ReadEnum();
          break;
        }
        case 16: {
          Power = input.ReadUInt32();
          break;
        }
        case 24: {
          Fdev = input.ReadUInt32();
          break;
        }
        case 32: {
          Bandwidth = input.ReadUInt32();
          break;
        }
        case 40: {
          DataRate = input.ReadUInt32();
          break;
        }
        case 48: {
          CodeRate = input.ReadUInt32();
          break;
        }
        case 56: {
          PreambleLen = input.ReadUInt32();
          break;
        }
        case 64: {
          FixLen = input.ReadBool();
          break;
        }
        case 72: {
          CrcOn = input.ReadBool();
          break;
        }
        case 80: {
          FreqHopOn = input.ReadBool();
          break;
        }
        case 88: {
          HopPeriod = input.ReadUInt32();
          break;
        }
        case 96: {
          IqInverted = input.ReadBool();
          break;
        }
        case 104: {
          Timeout = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Modem = (global::RadioModems) input.ReadEnum();
          break;
        }
        case 16: {
          Power = input.ReadUInt32();
          break;
        }
        case 24: {
          Fdev = input.ReadUInt32();
          break;
        }
        case 32: {
          Bandwidth = input.ReadUInt32();
          break;
        }
        case 40: {
          DataRate = input.ReadUInt32();
          break;
        }
        case 48: {
          CodeRate = input.ReadUInt32();
          break;
        }
        case 56: {
          PreambleLen = input.ReadUInt32();
          break;
        }
        case 64: {
          FixLen = input.ReadBool();
          break;
        }
        case 72: {
          CrcOn = input.ReadBool();
          break;
        }
        case 80: {
          FreqHopOn = input.ReadBool();
          break;
        }
        case 88: {
          HopPeriod = input.ReadUInt32();
          break;
        }
        case 96: {
          IqInverted = input.ReadBool();
          break;
        }
        case 104: {
          Timeout = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TransmitCommand : pb::IMessage<TransmitCommand>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TransmitCommand> _parser = new pb::MessageParser<TransmitCommand>(() => new TransmitCommand());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TransmitCommand> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UartMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TransmitCommand() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TransmitCommand(TransmitCommand other) : this() {
    isMulticast_ = other.isMulticast_;
    deviceId_ = other.deviceId_;
    payload_ = other.payload_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TransmitCommand Clone() {
    return new TransmitCommand(this);
  }

  /// <summary>Field number for the "IsMulticast" field.</summary>
  public const int IsMulticastFieldNumber = 1;
  private bool isMulticast_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsMulticast {
    get { return isMulticast_; }
    set {
      isMulticast_ = value;
    }
  }

  /// <summary>Field number for the "DeviceId" field.</summary>
  public const int DeviceIdFieldNumber = 2;
  private uint deviceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = value;
    }
  }

  /// <summary>Field number for the "Payload" field.</summary>
  public const int PayloadFieldNumber = 3;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TransmitCommand);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TransmitCommand other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsMulticast != other.IsMulticast) return false;
    if (DeviceId != other.DeviceId) return false;
    if (Payload != other.Payload) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (IsMulticast != false) hash ^= IsMulticast.GetHashCode();
    if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (IsMulticast != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsMulticast);
    }
    if (DeviceId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DeviceId);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (IsMulticast != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsMulticast);
    }
    if (DeviceId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DeviceId);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (IsMulticast != false) {
      size += 1 + 1;
    }
    if (DeviceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
    }
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TransmitCommand other) {
    if (other == null) {
      return;
    }
    if (other.IsMulticast != false) {
      IsMulticast = other.IsMulticast;
    }
    if (other.DeviceId != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsMulticast = input.ReadBool();
          break;
        }
        case 16: {
          DeviceId = input.ReadUInt32();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsMulticast = input.ReadBool();
          break;
        }
        case 16: {
          DeviceId = input.ReadUInt32();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RequestBootInfo : pb::IMessage<RequestBootInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RequestBootInfo> _parser = new pb::MessageParser<RequestBootInfo>(() => new RequestBootInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RequestBootInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UartMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RequestBootInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RequestBootInfo(RequestBootInfo other) : this() {
    request_ = other.request_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RequestBootInfo Clone() {
    return new RequestBootInfo(this);
  }

  /// <summary>Field number for the "Request" field.</summary>
  public const int RequestFieldNumber = 1;
  private bool request_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Request {
    get { return request_; }
    set {
      request_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RequestBootInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RequestBootInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Request != other.Request) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Request != false) hash ^= Request.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Request != false) {
      output.WriteRawTag(8);
      output.WriteBool(Request);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Request != false) {
      output.WriteRawTag(8);
      output.WriteBool(Request);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Request != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RequestBootInfo other) {
    if (other == null) {
      return;
    }
    if (other.Request != false) {
      Request = other.Request;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Request = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Request = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class UartCommand : pb::IMessage<UartCommand>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UartCommand> _parser = new pb::MessageParser<UartCommand>(() => new UartCommand());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<UartCommand> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UartMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UartCommand() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UartCommand(UartCommand other) : this() {
    switch (other.BodyCase) {
      case BodyOneofCase.RxConfig:
        RxConfig = other.RxConfig.Clone();
        break;
      case BodyOneofCase.TxConfig:
        TxConfig = other.TxConfig.Clone();
        break;
      case BodyOneofCase.TransmitCommand:
        TransmitCommand = other.TransmitCommand.Clone();
        break;
      case BodyOneofCase.RequestBootInfo:
        RequestBootInfo = other.RequestBootInfo.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UartCommand Clone() {
    return new UartCommand(this);
  }

  /// <summary>Field number for the "rxConfig" field.</summary>
  public const int RxConfigFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RadioRxConfig RxConfig {
    get { return bodyCase_ == BodyOneofCase.RxConfig ? (global::RadioRxConfig) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RxConfig;
    }
  }

  /// <summary>Field number for the "txConfig" field.</summary>
  public const int TxConfigFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RadioTxConfig TxConfig {
    get { return bodyCase_ == BodyOneofCase.TxConfig ? (global::RadioTxConfig) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.TxConfig;
    }
  }

  /// <summary>Field number for the "transmitCommand" field.</summary>
  public const int TransmitCommandFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TransmitCommand TransmitCommand {
    get { return bodyCase_ == BodyOneofCase.TransmitCommand ? (global::TransmitCommand) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.TransmitCommand;
    }
  }

  /// <summary>Field number for the "requestBootInfo" field.</summary>
  public const int RequestBootInfoFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RequestBootInfo RequestBootInfo {
    get { return bodyCase_ == BodyOneofCase.RequestBootInfo ? (global::RequestBootInfo) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.RequestBootInfo;
    }
  }

  private object body_;
  /// <summary>Enum of possible cases for the "Body" oneof.</summary>
  public enum BodyOneofCase {
    None = 0,
    RxConfig = 1,
    TxConfig = 2,
    TransmitCommand = 3,
    RequestBootInfo = 4,
  }
  private BodyOneofCase bodyCase_ = BodyOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BodyOneofCase BodyCase {
    get { return bodyCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBody() {
    bodyCase_ = BodyOneofCase.None;
    body_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as UartCommand);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(UartCommand other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RxConfig, other.RxConfig)) return false;
    if (!object.Equals(TxConfig, other.TxConfig)) return false;
    if (!object.Equals(TransmitCommand, other.TransmitCommand)) return false;
    if (!object.Equals(RequestBootInfo, other.RequestBootInfo)) return false;
    if (BodyCase != other.BodyCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (bodyCase_ == BodyOneofCase.RxConfig) hash ^= RxConfig.GetHashCode();
    if (bodyCase_ == BodyOneofCase.TxConfig) hash ^= TxConfig.GetHashCode();
    if (bodyCase_ == BodyOneofCase.TransmitCommand) hash ^= TransmitCommand.GetHashCode();
    if (bodyCase_ == BodyOneofCase.RequestBootInfo) hash ^= RequestBootInfo.GetHashCode();
    hash ^= (int) bodyCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (bodyCase_ == BodyOneofCase.RxConfig) {
      output.WriteRawTag(10);
      output.WriteMessage(RxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TxConfig) {
      output.WriteRawTag(18);
      output.WriteMessage(TxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TransmitCommand) {
      output.WriteRawTag(26);
      output.WriteMessage(TransmitCommand);
    }
    if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
      output.WriteRawTag(34);
      output.WriteMessage(RequestBootInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (bodyCase_ == BodyOneofCase.RxConfig) {
      output.WriteRawTag(10);
      output.WriteMessage(RxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TxConfig) {
      output.WriteRawTag(18);
      output.WriteMessage(TxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TransmitCommand) {
      output.WriteRawTag(26);
      output.WriteMessage(TransmitCommand);
    }
    if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
      output.WriteRawTag(34);
      output.WriteMessage(RequestBootInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (bodyCase_ == BodyOneofCase.RxConfig) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TxConfig) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxConfig);
    }
    if (bodyCase_ == BodyOneofCase.TransmitCommand) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransmitCommand);
    }
    if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestBootInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(UartCommand other) {
    if (other == null) {
      return;
    }
    switch (other.BodyCase) {
      case BodyOneofCase.RxConfig:
        if (RxConfig == null) {
          RxConfig = new global::RadioRxConfig();
        }
        RxConfig.MergeFrom(other.RxConfig);
        break;
      case BodyOneofCase.TxConfig:
        if (TxConfig == null) {
          TxConfig = new global::RadioTxConfig();
        }
        TxConfig.MergeFrom(other.TxConfig);
        break;
      case BodyOneofCase.TransmitCommand:
        if (TransmitCommand == null) {
          TransmitCommand = new global::TransmitCommand();
        }
        TransmitCommand.MergeFrom(other.TransmitCommand);
        break;
      case BodyOneofCase.RequestBootInfo:
        if (RequestBootInfo == null) {
          RequestBootInfo = new global::RequestBootInfo();
        }
        RequestBootInfo.MergeFrom(other.RequestBootInfo);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::RadioRxConfig subBuilder = new global::RadioRxConfig();
          if (bodyCase_ == BodyOneofCase.RxConfig) {
            subBuilder.MergeFrom(RxConfig);
          }
          input.ReadMessage(subBuilder);
          RxConfig = subBuilder;
          break;
        }
        case 18: {
          global::RadioTxConfig subBuilder = new global::RadioTxConfig();
          if (bodyCase_ == BodyOneofCase.TxConfig) {
            subBuilder.MergeFrom(TxConfig);
          }
          input.ReadMessage(subBuilder);
          TxConfig = subBuilder;
          break;
        }
        case 26: {
          global::TransmitCommand subBuilder = new global::TransmitCommand();
          if (bodyCase_ == BodyOneofCase.TransmitCommand) {
            subBuilder.MergeFrom(TransmitCommand);
          }
          input.ReadMessage(subBuilder);
          TransmitCommand = subBuilder;
          break;
        }
        case 34: {
          global::RequestBootInfo subBuilder = new global::RequestBootInfo();
          if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
            subBuilder.MergeFrom(RequestBootInfo);
          }
          input.ReadMessage(subBuilder);
          RequestBootInfo = subBuilder;
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          global::RadioRxConfig subBuilder = new global::RadioRxConfig();
          if (bodyCase_ == BodyOneofCase.RxConfig) {
            subBuilder.MergeFrom(RxConfig);
          }
          input.ReadMessage(subBuilder);
          RxConfig = subBuilder;
          break;
        }
        case 18: {
          global::RadioTxConfig subBuilder = new global::RadioTxConfig();
          if (bodyCase_ == BodyOneofCase.TxConfig) {
            subBuilder.MergeFrom(TxConfig);
          }
          input.ReadMessage(subBuilder);
          TxConfig = subBuilder;
          break;
        }
        case 26: {
          global::TransmitCommand subBuilder = new global::TransmitCommand();
          if (bodyCase_ == BodyOneofCase.TransmitCommand) {
            subBuilder.MergeFrom(TransmitCommand);
          }
          input.ReadMessage(subBuilder);
          TransmitCommand = subBuilder;
          break;
        }
        case 34: {
          global::RequestBootInfo subBuilder = new global::RequestBootInfo();
          if (bodyCase_ == BodyOneofCase.RequestBootInfo) {
            subBuilder.MergeFrom(RequestBootInfo);
          }
          input.ReadMessage(subBuilder);
          RequestBootInfo = subBuilder;
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
