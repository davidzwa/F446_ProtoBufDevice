syntax = "proto3";

import "shared/experiment_config.proto";

option csharp_namespace = "LoRa";

message Version {
    uint32 Major = 1;
    uint32 Minor = 2;
    uint32 Patch = 3;
    uint32 Revision = 4;
}

message DeviceId {
    uint32 Id0 = 1;
    uint32 Id1 = 2;
    uint32 Id2 = 3;
}

message BootMessage {
    DeviceId DeviceIdentifier = 1;
    Version FirmwareVersion = 2;
    uint32 MeasurementCount = 3;
    bool MeasurementsDisabled = 4;
    uint32 RlncFlashState = 5;
    uint32 RlncSessionState = 6;
}

message RlncRemoteFlashStartCommand {
    // We can stretch this only so far given a certain redundancy
    // uint32 ReducedGenerationRedundancySize = 1;

    // TX power, BW and SF
    TransmitConfiguration transmitConfiguration = 2;
    ReceptionRateConfig receptionRateConfig = 3;

    // Timer delay between each packet
    uint32 TimerDelay = 4;
    bool SetIsMulticast = 5;
    uint32 DeviceId0 = 6;

    // Not implemented
    bool DebugMatrixUart = 7;
    bool DebugFragmentUart = 8;
}

message RlncRemoteFlashStopCommand {

}

message RlncQueryRemoteFlashState {

}

message RlncRemoteFlashResponse {
    uint32 RlncFlashState = 1;
    uint32 RlncSessionState = 2;

    // TX power, BW and SF
    int32 CurrentTxPower = 3;
    uint32 CurrentTxBandwidth = 4;
    uint32 CurrentTxDataRate = 5;

    // Timer delay between each packet
    uint32 CurrentTimerDelay = 6;
    bool CurrentSetIsMulticast = 7;
    uint32 CurrentDeviceId0 = 8;

    // Experiment configuration loaded from RlncInitCommand
    uint32 GenerationSize = 9;
    uint32 GenerationRedundancySize = 10;
    uint32 GenerationCount = 11;
    uint32 FrameSize = 12;
    uint32 TotalFrameCount = 13;
    ReceptionRateConfig receptionRateConfig = 14;
}

message RlncInitConfigCommand {
    uint32 GenerationSize = 1;
    uint32 GenerationRedundancySize = 2;
    uint32 GenerationCount = 3;
    uint32 FrameSize = 4;
    uint32 TotalFrameCount = 5;
    uint32 FieldDegree = 6;
    uint32 FieldPoly = 7;
    // PRNG will not switch for now
    // PRngImplementation pRngImplementation = 9;
    bool DebugMatrixUart = 10;
    bool DebugFragmentUart = 11;

    optional ReceptionRateConfig receptionRateConfig = 12;
}

message RlncEncodedFragment {
    // This is a marker field mostly using the Payload and CorrelationCode top fields
    uint32 PRngSeedState = 1;
}

message RlncFlashEncodedFragment {
    // This is a compressed field in flash memory
    uint32 PRngSeedState = 1;
    bytes Meta = 2; // sequence number, generation ID, fragment ID
    bytes Payload = 3;
}

message RlncStateUpdate {
    // DEPRECATED This field is being deprecated as it is now redundant over CorrelationCode
    uint32 GenerationIndex = 1;
}

message RlncTerminationCommand {
    // This is a marker field - for now
    // Might add debugging flags
}

message DecodingResult {
    bool Success = 1;
    uint32 MatrixRank = 2;

    // We check the internal payload
    uint32 FirstDecodedNumber = 3;
    uint32 LastDecodedNumber = 4;

    // Copy from DecodingUpdate
    uint32 ReceivedFragments = 5;
    uint32 MissedGenFragments = 6;
    uint32 CurrentGenerationIndex = 7;
}

message DecodingMatrix {
    uint32 Cols = 1;
    uint32 Rows = 2;
}

message DecodingUpdate {
    uint32 MatrixCrc8 = 1;
    uint32 FirstRowCrc8 = 2;
    uint32 LastRowCrc8 = 3;
    uint32 LastRowIndex = 4;
    uint32 RankProgress = 5;
    uint32 ReceivedFragments = 6;
    uint32 CurrentGenerationIndex = 7;
    bool IsRunning = 8;
    uint32 UsedPrngSeedState = 9;
    uint32 CurrentPrngState = 10;
    uint32 MissedGenFragments = 11;
    bool Success = 12;
}
